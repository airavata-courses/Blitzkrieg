node {
    stage('Code checkout') {
        checkout scm
    }

    stage('Build image') {
	sh "sudo -S docker network create --driver bridge blitzkrieg-default-network || true"
        sh "sudo -S docker-compose -f ./user_management/docker-compose.yml build"
	sh "sudo -S docker-compose -f ./user_management/docker-compose.yml up -d postgres"
	sh "sudo -S docker commit postgres"
	image_id = sh (
            script: "sudo -S docker images --format='{{.Repository}} {{.ID}}' | grep 'postgres' | cut -d' ' -f2",
            returnStdout: true
        ).trim()
	 echo "Image id: ${image_id}"
	// sh "sudo -S docker tag | `sudo -S docker images --format='{{.Repository}} {{.ID}}' | grep 'postgres' | cut -d' ' -f2` | thertion12/postgres"    }
    }
	
    stage('Push image') {
	withCredentials([usernamePassword( credentialsId: 'docker-hub-credentials', usernameVariable: 'USER', passwordVariable: 'PASSWORD')]) {
	    def registry_url = "registry.hub.docker.com/"
            sh "sudo -S docker login -u $USER -p $PASSWORD ${registry_url}"
            docker.withRegistry("http://${registry_url}", "docker-hub-credentials") {
	        sh "sudo -S docker push thertion12/user-management"
		sh "sudo -S docker push thertion12/postgres"	    
	    }
	}
    }
}
